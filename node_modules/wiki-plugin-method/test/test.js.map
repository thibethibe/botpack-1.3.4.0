{
  "version": 3,
  "names": [
    "asValue",
    "expect",
    "method",
    "require",
    "describe",
    "traits",
    "value",
    "asUnits",
    "hasUnits",
    "it",
    "to",
    "eql",
    "units",
    "simplify",
    "be",
    "done",
    "state",
    "item",
    "text",
    "dispatch",
    "list",
    "output",
    "abc",
    "input",
    "xyz",
    "caller",
    "errors",
    "message",
    "checks",
    "five",
    "parseUnits",
    "parseRatio",
    "numerator",
    "denominator",
    "parseLabel",
    "from",
    "alternatives",
    "show",
    "legend",
    "readout",
    "tokens",
    "lexer",
    "syms",
    "alpha",
    "beta",
    "parser",
    "local",
    "Math",
    "round",
    "patch"
  ],
  "sources": [
    "test.coffee"
  ],
  "sourcesContent": [
    "method = require '../client/method'\nexpect = require 'expect.js'\nasValue = method.asValue\n\ndescribe 'method plugin', ->\n\n\tdescribe 'values', ->\n\t\ttraits = (value) -> [\n\t\t\tmethod.asValue(value),\n\t\t\tmethod.asUnits(value),\n\t\t\tmethod.hasUnits(value)]\n\n\t\tit 'can be null', ->\n\t\t\t# expect(traits null).to.eql [NaN, [], false]\n\n\t\tit 'can be a number', ->\n\t\t\texpect(traits 100).to.eql [100, [], false]\n\n\t\tit 'can be a string', ->\n\t\t\texpect(traits \"200\").to.eql [200, [], false]\n\n\t\tit 'can be an array', ->\n\t\t\texpect(traits [300,400,500]).to.eql [300, [], false]\n\n\t\tit 'can be an object', ->\n\t\t\texpect(traits {value: 400}).to.eql [400, [], false]\n\n\t\tit 'can have units', ->\n\t\t\texpect(traits {value: 500, units:['mph']}).to.eql [500, ['mph'], true]\n\n\t\tit 'can have a value with units', ->\n\t\t\texpect(traits {value: {value: 600, units:['ppm']}}).to.eql [600, ['ppm'], true]\n\n\t\tit 'can have empty units', ->\n\t\t\texpect(traits {value: 700, units:[]}).to.eql [700, [], false]\n\n\t\tit 'can be an array with units within', ->\n\t\t\texpect(traits [{value: 800, units:['feet']}, 900]).to.eql [800, ['feet'], true]\n\n\tdescribe 'simplify', ->\n\n\t\tit 'no units', ->\n\t\t\tvalue = method.simplify {value: 100}\n\t\t\texpect(value).to.be 100\n\n\t\tit 'empty units', ->\n\t\t\tvalue = method.simplify {value: 200, units: []}\n\t\t\texpect(value).to.be 200\n\n\tdescribe 'parsing', ->\n\n\t\tit 'recognizes numbers', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"123\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list).to.eql [123]\n\t\t\t\tdone()\n\n\t\tit 'defines values', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"321 abc\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output.abc).to.be 321\n\t\t\t\tdone()\n\n\t\tit 'retrieves values', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"abc\"}\n\t\t\t\tinput: {abc: 456}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list).to.eql [456]\n\t\t\t\tdone()\n\n\t\tit 'computes sums', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"abc\\n2000\\nSUM\\n1000\\nSUM xyz\"}\n\t\t\t\tinput: {abc: 456}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output.xyz).to.be 3456\n\t\t\t\tdone()\n\n\tdescribe 'errors', ->\n\n\t\tit 'illegal input', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"!!!\"}\n\t\t\t\tcaller: {errors: []}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.caller.errors[0].message).to.be \"can't parse '!!!'\"\n\t\t\t\tdone()\n\n\t\tit 'undefined variable', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"foo\"}\n\t\t\t\tcaller: {errors: []}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.caller.errors[0].message).to.be \"can't find value of 'foo'\"\n\t\t\t\tdone()\n\n\t\tit 'undefined function', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"RUMBA\"}\n\t\t\t\tcaller: {errors: []}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.caller.errors[0].message).to.be \"don't know how to 'RUMBA'\"\n\t\t\t\tdone()\n\n\t\tit 'precomputed checks', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"2\\n3\\nSUM five\", checks: {five: 6}}\n\t\t\t\tcaller: {errors: []}\n\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.caller.errors[0].message).to.be \"five != 6.0000\"\n\t\t\t\tdone()\n\n\tdescribe 'unit parsing', ->\n\n\t\tit 'sorts words', ->\n\t\t\tunits = method.parseUnits \"Pound Foot\"\n\t\t\texpect(units).to.eql [\"foot\", \"pound\"]\n\n\t\tit 'ignores extra spaces', ->\n\t\t\tunits = method.parseUnits \"  Pound    Foot   \"\n\t\t\texpect(units).to.eql [\"foot\", \"pound\"]\n\n\t\tit 'ignores non-word characters', ->\n\t\t\tunits = method.parseUnits \"$ & Â¢\"\n\t\t\texpect(units).to.eql []\n\n\t\tit 'expands squares and cubes', ->\n\t\t\tunits = method.parseUnits \"Square Pound Cubic Foot\"\n\t\t\texpect(units).to.eql [\"foot\", \"foot\", \"foot\", \"pound\", \"pound\"]\n\n\t\tit 'recognizes ratios', ->\n\t\t\tunits = method.parseRatio \"(Pounds / Square Foot)\"\n\t\t\texpect(units).to.eql {numerator: [\"pounds\"], denominator: [\"foot\", \"foot\"]}\n\n\t\tit 'recognizes non-ratios', ->\n\t\t\tunits = method.parseRatio \"(Foot Pound)\"\n\t\t\texpect(units).to.eql [\"foot\", \"pound\"]\n\n\t\tit 'recognizes inversions', ->\n\t\t\tunits = method.parseRatio \"( / Seconds)\"\n\t\t\texpect(units).to.eql {numerator: [], denominator: [\"seconds\"]}\n\n\t\tit 'ignores text outside parens', ->\n\t\t\tunits = method.parseLabel \"Speed (MPH) Moving Average\"\n\t\t\texpect(units).to.eql {units: [\"mph\"]}\n\n\t\tit 'recognizes conversions as unit pairs', ->\n\t\t\tunits = method.parseLabel \"1.47\t(Feet / Seconds) from (Miles / Hours) \"\n\t\t\texpect(units).to.eql\n\t\t\t\tunits: { numerator: [ 'feet' ], denominator: [ 'seconds' ] }\n\t\t\t\tfrom: { numerator: [ 'miles' ], denominator: [ 'hours' ] }\n\n\t\tit 'defines values as objects', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"321 abc (mph)\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output['abc (mph)']).to.eql {value: 321, units: [\"mph\"]}\n\t\t\t\tdone()\n\n\t\tit 'defines conversion constants as objects', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"1.47 (Feet/Seconds) from (Miles/Hours)\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output['(Feet/Seconds) from (Miles/Hours)']).to.eql\n\t\t\t\t\tvalue: 1.47\n\t\t\t\t\tunits:\n\t\t\t\t\t\tnumerator:['feet']\n\t\t\t\t\t\tdenominator:['seconds']\n\t\t\t\t\tfrom:\n\t\t\t\t\t\tnumerator:['miles']\n\t\t\t\t\t\tdenominator:['hours']\n\t\t\t\tdone()\n\n\tdescribe 'conversions', ->\n\n\t\tinput =\n\t\t\t\"(fps) from (mph)\":\n\t\t\t\tvalue: 88 / 60\n\t\t\t\tunits: ['fps']\n\t\t\t\tfrom: ['mph']\n\t\t\t\"speed\":\n\t\t\t\tvalue: 30\n\t\t\t\tunits: ['mph']\n\n\t\tit 'apply to arguments', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: input\n\t\t\t\titem: {text: \"30 (mph)\\n44 (fps)\\nSUM speed\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output['speed']).to.eql\n\t\t\t\t\tvalue: 88\n\t\t\t\t\tunits: ['fps']\n\t\t\t\tdone()\n\n\t\tit 'apply to variables', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: input\n\t\t\t\titem: {text: \"speed\\n44 (fps)\\nSUM speed\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output['speed']).to.eql\n\t\t\t\t\tvalue: 88\n\t\t\t\t\tunits: ['fps']\n\t\t\t\tdone()\n\n\t\tit 'apply to results', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: input\n\t\t\t\titem: {text: \"60 (mph)\\nSUM (fps)\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output['(fps)']).to.eql\n\t\t\t\t\tvalue: 88\n\t\t\t\t\tunits: ['fps']\n\t\t\t\tdone()\n\n\t\tit 'selected from alternatives', (done) ->\n\t\t\talternatives =\n\t\t\t\"speeding\":\n\t\t\t\tvalue: 120\n\t\t\t\tunits: ['mph']\n\t\t\t\"(fps) from (mph)\":\n\t\t\t\tvalue: 88 / 60\n\t\t\t\tunits: ['fps']\n\t\t\t\tfrom: ['mph']\n\t\t\t\"(miles/hour) from (mph)\":\n\t\t\t\tvalue: 1\n\t\t\t\tunits: {numerator: ['miles'], denominator: ['hour']}\n\t\t\t\tfrom: ['mph']\n\t\t\t\"speed\":\n\t\t\t\tvalue: 88\n\t\t\t\tunits: ['fps']\n\t\t\tstate =\n\t\t\t\tinput: alternatives\n\t\t\t\titem: {text: \"speeding\\nSUM (fps)\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.output['(fps)']).to.eql\n\t\t\t\t\tvalue: 88*2\n\t\t\t\t\tunits: ['fps']\n\t\t\t\tdone()\n\n\t\tit 'optional when units are acceptable', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: input\n\t\t\t\titem: {text: \"60 (mph)\\n30 (mph)\\nSUM\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql\n\t\t\t\t\tvalue: 90\n\t\t\t\t\tunits: ['mph']\n\t\t\t\tdone()\n\n\t\tit 'reported when missing', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"22 (fps)\\n15 (mps)\\nSUM\"}\n\t\t\t\tcaller: {errors: []}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql\n\t\t\t\t\tvalue: 22\n\t\t\t\t\tunits: ['fps']\n\t\t\t\texpect(state.caller.errors[0].message).to.be \"can't convert to [mps] from [fps]\"\n\t\t\t\tdone()\n\n\t\tit 'adds units to SHOW legend', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"36 (in/yd)\\nSHOW Mumble\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.show[0]).to.eql\n\t\t\t\t\tlegend: \"Mumble<br>( in / yd )\"\n\t\t\t\t\treadout: \"36\"\n\t\t\t\tdone()\n\n\tdescribe 'products', ->\n\n\t\tinput =\n\t\t\t\"(Feet/Seconds) per (Miles/Hours)\":\n\t\t\t\tvalue: 88 / 60\n\t\t\t\tunits: ['fps']\n\t\t\t\tfrom: ['mph']\n\t\t\t\"side\":\n\t\t\t\tvalue: 6\n\t\t\t\tunits: ['Inches']\n\n\t\tit 'repeats units', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: input\n\t\t\t\titem: {text: \"side\\nside\\nPRODUCT area\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql\n\t\t\t\t\tvalue: 36\n\t\t\t\t\tunits: ['Inches', 'Inches']\n\t\t\t\tdone()\n\n\t\tit 'cancels units', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: input\n\t\t\t\titem: {text: \"2 (yd)\\n3 (ft/yd)\\n12 (in/ft)\\nPRODUCT height\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql\n\t\t\t\t\tvalue: 72\n\t\t\t\t\tunits: ['in']\n\t\t\t\tdone()\n\n\t\tit 'invert units for ratio', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: input\n\t\t\t\titem: {text: \"72 (in)\\n2 (yd)\\nRATIO\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql\n\t\t\t\t\tvalue: 36\n\t\t\t\t\tunits: {numerator: ['in'], denominator: ['yd']}\n\t\t\t\tdone()\n\n\tdescribe 'expressions', ->\n\n\t\tit 'can be lexed with literals', ->\n\t\t\ttokens = method.lexer '12+(345-678)*910'\n\t\t\texpect(tokens).to.eql [12, '+', '(', 345, '-', 678, ')', '*', 910]\n\n\t\tit 'can be lexed with variables', ->\n\t\t\tsyms = {alpha: 100, beta: 200}\n\t\t\ttokens = method.lexer '12+(alpha-678)*beta', syms\n\t\t\texpect(tokens).to.eql [12, '+', '(', 100, '-', 678, ')', '*', 200]\n\n\t\tit 'can be constant', ->\n\t\t\tvalue = method.parser [12]\n\t\t\texpect(value).to.be 12\n\n\t\tit 'do multiply first', ->\n\t\t\tvalue = method.parser [2, '+', 3, '*', 5]\n\t\t\texpect(value).to.be 17\n\n\t\tit 'do parens first', ->\n\t\t\tvalue = method.parser ['(', 2, '+', 3, ')', '*', 5]\n\t\t\texpect(value).to.be 25\n\n\t\tit 'applied by CALC', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"CALC 12+(345-678)*910\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.be -303018\n\t\t\t\tdone()\n\n\t\tit 'applied by CALC with local variables', (done) ->\n\t\t\tstate =\n\t\t\t\tlocal: {\"Hourly Rate\": 16.45, \"Regular Hours\": 40, \"Overtime Hours\": 12}\n\t\t\t\titem: {text: \"CALC Rate * ( Regular + 1.5 * Overtime )\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(Math.round(state.list[0])).to.eql 954\n\t\t\t\tdone()\n\n\t\tit 'applied by CALC with recalled input variables', (done) ->\n\t\t\tstate =\n\t\t\t\tinput: {\"Hourly Rate\": 16.45, \"Regular Hours\": 40, \"Overtime Hours\": 12}\n\t\t\t\titem: {text: \"Hourly Rate\\nRegular Hours\\nOvertime Hours\\nCALC Rate * ( Regular + 1.5 * Overtime )\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(Math.round(state.list[0])).to.eql 954\n\t\t\t\tdone()\n\n\t\tit 'applied by CALC with computed variables and units', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"20.00 Rate (dollar / hour)\\n40 Regular (hour)\\n12 Overtime (hour)\\nCALC Rate * ( Regular + 1.5 * Overtime )\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql {value: 1160.00, units: ['dollar']}\n\t\t\t\tdone()\n\n\t\tit 'applied by CALC with all operators, variables and units', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"10 w (in)\\n30 h (in)\\n15 t (s)\\nCALC t*(h/t + w/t - (h+w)/t)\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql {value: 0, units: ['in']}\n\t\t\t\tdone()\n\n\tdescribe 'scrubbing', ->\n\t\tit 'sums 2 + 3', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"2\\n3\\nSUM\"}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql 5\n\t\t\t\tdone()\n\n\t\tit 'sums 2 + 3, scrubbing 2 to 1.5', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"2\\n3\\nSUM\"}\n\t\t\t\tpatch: {'1': 1.5}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql 4.5\n\t\t\t\tdone()\n\n\t\tit 'sums 2 + 3, scrubbing 3 to 3.3', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"2\\n3\\nSUM\"}\n\t\t\t\tpatch: {'2': 3.3}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql 5.3\n\t\t\t\tdone()\n\n\t\tit 'sums 2 + 3 inches, scrubbing 3 to 3.3', (done) ->\n\t\t\tstate =\n\t\t\t\titem: {text: \"2 (in)\\n3 (in)\\nSUM\"}\n\t\t\t\tpatch: {'2': 3.3}\n\t\t\tmethod.dispatch state, (state) ->\n\t\t\t\texpect(state.list[0]).to.eql { value: 5.3, units: [ 'in' ] }\n\t\t\t\tdone()\n"
  ],
  "mappings": "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"
}