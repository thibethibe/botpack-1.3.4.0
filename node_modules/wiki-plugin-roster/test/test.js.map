{
  "version": 3,
  "names": [
    "expect",
    "includes",
    "parse",
    "wiki",
    "_require",
    "require",
    "site",
    "flag",
    "global",
    "describe",
    "it",
    "result",
    "text",
    "to",
    "match",
    "stub",
    "addClass",
    "c",
    "get",
    "n",
    "be",
    "getRoster",
    "eql",
    "all",
    "ward"
  ],
  "sources": [
    "test.coffee"
  ],
  "sourcesContent": [
    "# build time tests for roster plugin\n# see http://mochajs.org/\n\n{parse, includes} = require '../client/roster'\nexpect = require 'expect.js'\n\n# mock wiki.site(site).flag()\nwiki = {}\nwiki.site = (site) -> {\n  flag: -> \"//#{site}/favicon.png\"\n}\n# and make wiki global\nglobal.wiki = wiki\n\ndescribe 'roster plugin', ->\n\n  describe 'site markup', ->\n\n    it 'makes image', ->\n      result = parse null, {text: 'fed.wiki.org'}\n      expect(result).to.match /<img class=\"remote\" src=\"\\/\\/fed.wiki.org\\/favicon.png\"/\n\n    it 'has title', ->\n      result = parse null, {text: 'fed.wiki.org'}\n      expect(result).to.match /title=\"fed.wiki.org\"/\n\n    it 'has site data', ->\n      result = parse null, {text: 'fed.wiki.org'}\n      expect(result).to.match /data-site=\"fed.wiki.org\"/\n\n    it 'has slug data', ->\n      result = parse null, {text: 'fed.wiki.org'}\n      expect(result).to.match /data-slug=\"welcome-visitors\"/\n\n  describe 'end of line markup', ->\n\n    it 'has anchor', ->\n      result = parse null, {text: 'fed.wiki.org'}\n      expect(result).to.match /<a class='loadsites' href= \"\\/#\"/\n\n    it 'has title', ->\n      result = parse null, {text: 'fed.wiki.org'}\n      expect(result).to.match /title=\"add these 1 sites\\nto neighborhood\"/\n\n    it 'has » at end of line', ->\n      result = parse null, {text: 'fed.wiki.org'}\n      expect(result).to.match />»<\\/a><br>/\n\n  describe 'category formatting', ->\n\n    it 'end of line', ->\n      result = parse null, {text: 'students'}\n      expect(result).to.match /students *<br>/\n\n  describe 'category access', ->\n    stub =\n      addClass: (c) -> this.c = c\n      get: (n) -> this\n\n    it 'announces roster-source', ->\n      parse stub, {text: \"wiki.org\"}\n      expect(stub.c).to.be 'roster-source'\n\n    it 'has category all', ->\n      parse stub, {text: \"wiki.org\\nfoo.wiki.org\"}\n      expect(stub.getRoster()).to.eql { all: [ 'wiki.org', 'foo.wiki.org' ] }\n\n    it 'allows prefix category name', ->\n      parse stub, {text: \"ward\\nwiki.org\\nfoo.wiki.org\"}\n      expect(stub.getRoster().ward).to.eql [ 'wiki.org', 'foo.wiki.org' ]\n\n    it 'allows sufix category name', ->\n      parse stub, {text: \"wiki.org\\nfoo.wiki.org\\nward\"}\n      expect(stub.getRoster().ward).to.eql [ 'wiki.org', 'foo.wiki.org' ]\n"
  ],
  "mappings": "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"
}