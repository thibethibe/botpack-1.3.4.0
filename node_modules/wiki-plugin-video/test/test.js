"use strict";

(function () {
  var expect, video;
  video = require('../client/video');
  expect = require('expect.js');
  describe('video plugin', function () {
    describe('parsing', function () {
      it('parses string', function () {
        var result;
        result = video.parse('YOUTUBE a1234\nDummy caption\nMore caption text');
        expect(result.player).to.be('YOUTUBE');
        expect(result.key).to.be('a1234');
        return expect(result.caption).to.be(' Dummy caption More caption text ');
      });
      it('parses START and END', function () {
        var result;
        result = video.parse('YOUTUBE a1234\nSTART 46:10\nEND 1:09:10\nDummy caption\nMore caption text');
        expect(result.player).to.be('YOUTUBE');
        expect(result.start).to.be('46:10');
        expect(result.end).to.be('1:09:10');
        expect(result.key).to.be('a1234');
        return expect(result.caption).to.be(' Dummy caption More caption text ');
      });
      it('allows video declaration to be below caption', function () {
        var result;
        result = video.parse('Dummy caption\nMore caption text\nYOUTUBE a1234');
        expect(result.player).to.be('YOUTUBE');
        expect(result.key).to.be('a1234');
        return expect(result.caption).to.be(' Dummy caption More caption text ');
      });
      return it('matches mime type as HTML5 option', function () {
        var result;
        result = video.parse('HTML5 mp4 http://example.com/video.mp4');
        expect(result.player).to.be('HTML5');
        expect(result.key).to.be('http://example.com/video.mp4');
        return expect(result.options).to.be('mp4');
      });
    });
    return describe('embedding', function () {
      it('renders Youtube video', function () {
        var embed;
        embed = video.embed({
          player: 'YOUTUBE',
          options: '',
          key: '12345'
        });
        return expect(embed).to.match(/<iframe[^>]*src="https:\/\/www\.youtube-nocookie\.com\/embed\/12345\?rel=0"/);
      });
      it('renders Youtube with start and end time', function () {
        var embed;
        embed = video.embed({
          player: 'YOUTUBE',
          options: '',
          key: '12345',
          start: '4:50',
          end: '8:20'
        });
        return expect(embed).to.match(/<iframe[^>]*src="https:\/\/www\.youtube-nocookie\.com\/embed\/12345\?start=290&end=500&rel=0"/);
      });
      it('renders Youtube playlist', function () {
        var embed;
        embed = video.embed({
          player: 'YOUTUBE',
          options: 'PLAYLIST',
          key: '12345'
        });
        return expect(embed).to.match(/<iframe[^>]*src="https:\/\/www\.youtube-nocookie\.com\/embed\/videoseries\?list=12345&rel=0"/);
      });
      it('renders Vimeo video', function () {
        var embed;
        embed = video.embed({
          player: 'VIMEO',
          key: '12345'
        });
        return expect(embed).to.match(/<iframe[^>]*src="https:\/\/player.vimeo.com\/video\/12345\?byline=0&dnt=1&portrait=0&title=0"/);
      });
      it('renders Vimeo with start time', function () {
        var embed;
        embed = video.embed({
          player: 'VIMEO',
          key: '12345',
          start: '1:20'
        });
        return expect(embed).to.match(/<iframe[^>]*src="https:\/\/player.vimeo.com\/video\/12345\?byline=0&dnt=1&portrait=0&title=0&#t=1:20"/);
      });
      it('renders Archive video', function () {
        var embed;
        embed = video.embed({
          player: 'ARCHIVE',
          key: '12345'
        });
        return expect(embed).to.match(/<iframe[^>]*src="https:\/\/archive.org\/embed\/12345"/);
      });
      it('renders TED video', function () {
        var embed;
        embed = video.embed({
          player: 'TED',
          key: '12345'
        });
        return expect(embed).to.match(/<iframe[^>]*src="https:\/\/embed-ssl.ted.com\/talks\/12345.html"/);
      });
      it('renders HTML5 video', function () {
        var embed;
        embed = video.embed({
          player: 'HTML5',
          options: 'mp4',
          key: 'https://example.com/video.mp4'
        });
        return expect(embed).to.match(/<video\s+controls\s+preload="metadata"\s+width="100%">\s+<source\s+src="https:\/\/example.com\/video.mp4"\s+type="video\/mp4"/);
      });
      it('renders HTML5 video with start', function () {
        var embed;
        embed = video.embed({
          player: 'HTML5',
          options: 'mp4',
          key: 'https://example.com/video.mp4',
          start: '45'
        });
        return expect(embed).to.match(/<video\s+controls\s+preload="metadata"\s+width="100%">\s+<source\s+src="https:\/\/example.com\/video.mp4#t=45"\s+type="video\/mp4"/);
      });
      it('renders HTML5 video with end', function () {
        var embed;
        embed = video.embed({
          player: 'HTML5',
          options: 'mp4',
          key: 'https://example.com/video.mp4',
          end: '45'
        });
        return expect(embed).to.match(/<video\s+controls\s+preload="metadata"\s+width="100%">\s+<source\s+src="https:\/\/example.com\/video.mp4#t=,45"\s+type="video\/mp4"/);
      });
      return it('renders fallback text when player is not recognized', function () {
        var embed;
        embed = video.embed({
          player: 'DUMMY',
          key: '12345'
        });
        return expect(embed).to.be("(unknown player)");
      });
    });
  });
}).call(void 0);
//# sourceMappingURL=test.js.map
